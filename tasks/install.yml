# SPDX-FileCopyrightText: 2023 Julian-Samuel GebÃ¼hr
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: Ensure Mobilizon paths exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0750"
    owner: "{{ mobilizon_uid }}"
    group: "{{ mobilizon_gid }}"
  with_items:
    - "{{ mobilizon_base_path }}"
    - "{{ mobilizon_data_path }}"
    - "{{ mobilizon_uploads_path }}"
    - "{{ mobilizon_tzdata_path }}"
    - "{{ mobilizon_config_path }}"

- name: Ensure Mobilizon support files installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/{{ item }}.j2"
    dest: "{{ mobilizon_base_path }}/{{ item }}"
    mode: "0640"
    owner: "{{ mobilizon_uid }}"
    group: "{{ mobilizon_gid }}"
  with_items:
    - env
    - labels

- name: Ensure Mobilizon image is pulled
  community.docker.docker_image:
    name: "{{ mobilizon_container_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
  when: "not mobilizon_container_image_self_build | bool"

- name: Ensure Mobilizon repository is present on self-build
  ansible.builtin.git:
    repo: "{{ mobilizon_container_repo }}"
    version: "{{ mobilizon_container_repo_version }}"
    dest: "{{ mobilizon_container_src_files_path }}"
    force: "yes"
  register: mobilizon_git_pull_results
  when: "mobilizon_container_image_self_build | bool"

- name: Ensure Mobilizon image is built
  community.docker.docker_image:
    name: "{{ mobilizon_container_image_name }}"
    source: build
    force_source: "{{ mobilizon_git_pull_results.changed if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mailer_git_pull_results.changed }}"
    build:
      dockerfile: Dockerfile
      path: "{{ mobilizon_container_src_files_path }}"
      pull: true
  when: "mobilizon_container_image_self_build | bool"

- name: Ensure Mobilizon container network is created via community.docker.docker_network
  when: devture_systemd_docker_base_container_network_creation_method == 'ansible-module'
  community.docker.docker_network:
    enable_ipv6: "{{ devture_systemd_docker_base_ipv6_enabled }}"
    name: "{{ mobilizon_container_network }}"
    driver: bridge
    driver_options: "{{ devture_systemd_docker_base_container_networks_driver_options }}"

- name: Ensure Mobilizon container network is created via ansible.builtin.command
  when: devture_systemd_docker_base_container_network_creation_method == 'command'
  ansible.builtin.command:
    cmd: >-
      {{ devture_systemd_docker_base_host_command_docker }} network create
      {% if devture_systemd_docker_base_ipv6_enabled %}--ipv6{% endif %}
      {{ devture_systemd_docker_base_container_networks_driver_options_string }}
      {{ mobilizon_container_network }}
  register: network_creation_result
  changed_when: network_creation_result.rc == 0
  failed_when: network_creation_result.rc != 0 and 'already exists' not in network_creation_result.stderr

- name: Ensure Mobilizon systemd service is installed
  ansible.builtin.template:
    mode: "0644"
    src: "{{ role_path }}/templates/systemd/mobilizon.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ mobilizon_identifier }}.service"
